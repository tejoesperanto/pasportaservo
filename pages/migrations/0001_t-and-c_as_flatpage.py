# Generated by Django 3.2.20 on 2024-02-18 06:19

from django.db import migrations


def create_conditions_page(app_registry, schema_editor):
    FlatPage = app_registry.get_model('flatpages', 'FlatPage')
    Site = app_registry.get_model('sites', 'Site')  # noqa: F841
    content = """
        Pasporta Servo estas servo de Tutmonda Esperantista Junulara Organizo (TEJO).
        Ĝiaj celoj estas faciligi vojaĝadon al esperantistoj, kaj tiel helpi al la
        starigo de kontaktoj trans limoj de lingvoj, kulturoj kaj generacioj.

        Uzantoj de la servo devas esti almenaŭ 16-jaraĝaj en la momento de registriĝo.

        Gastoj kaj gastigantoj devas scipovi la internacian lingvon Esperanto.

        Gastoj rajtas laŭ interkonsento senpage tranokti ĉe la gastigantoj. Pri aliaj
        eventualaj servoj aŭ komunaj aktivecoj kiel manĝoj, ĉiĉeronado aŭ simile, la
        gastigantoj kaj la gastoj interkonsentu.

        Pasporta Servo rajtas esti uzata nur por la menciitaj celoj kaj ne por aliaj,
        kiel ekzemple helpopetoj, korespondopetoj, invitleteroj, anoncoj, varbado, ktp.

        La gastoj devas respekti la regulojn kaj kondiĉojn de la gastigantoj laŭ la
        informoj en la profiloj de la gastigantoj kaj laŭ eventuala interkonsento.

        Gastigantoj kaj gastoj raportu al la PS-teamo pri eventuala misuzo aŭ
        malrespekto de reguloj de Pasporta Servo fare de aliaj uzantoj.
        Pro la naturo de la servo, ni ne povas garantii la ĝustecon de la informoj,
        nek akcepti respondecon okaze de misuzo.
    """
    tcpage = FlatPage.objects.create(  # noqa: F841
        url='/terms-conditions/',
        title='Terms & Conditions',
        content=content,
    )
    # In a clean environment, Site might not be yet created.
    # tcpage.sites.set([Site.objects.get_current()])


def remove_conditions_page(app_registry, schema_editor):
    FlatPage = app_registry.get_model('flatpages', 'FlatPage')
    FlatPage.objects.filter(url='/terms-conditions/').delete()


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(create_conditions_page, reverse_code=remove_conditions_page),
    ]
