# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-10-02 13:00
from __future__ import unicode_literals

from django.db import migrations


def indicate_availability(app_registry, schema_editor):
    # use the historical version of the model
    Place = app_registry.get_model('hosting', 'Place')
    for place in Place.all_objects.all():
        if place.owner not in place.family_members.all():
            place.sporadic_presence = True
        else:
            place.family_members.remove(place.owner)
        place.save()

def revert_availability_indicator(app_registry, schema_editor):
    # retrieve the correct version of the model from the versioned app registry
    Place = app_registry.get_model('hosting', 'Place')
    for place in Place.all_objects.all():
        if not place.sporadic_presence:
            place.family_members.add(place.owner)
        place.save()


class Migration(migrations.Migration):
    dependencies = [
        ('hosting', '0020_auto_20161002_1255'),
    ]

    operations = [
        migrations.RunPython(indicate_availability, revert_availability_indicator),
    ]
